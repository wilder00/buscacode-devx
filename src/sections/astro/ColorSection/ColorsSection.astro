---
import { colorsBase } from '@buscacode/tailwind-plugins'
---

<div>
  {
    Object.entries(colorsBase).map(([key, value]) => (
      <div class="flex items-center justify-between">
        <div>{key}</div>
        <div class="flex items-center justify-center">
          <span class="flex border">
            {value instanceof Object ? (
              Object.entries(value)
                .sort(([a], [b]) => {
                  if (a === 'DEFAULT') return -1
                  if (b === 'DEFAULT') return 1
                  return 0
                })
                .map(([key2, value2]) => (
                  <span
                    class="box-border h-8 w-8"
                    style={{ background: value2 }}
                    title={key2}
                    data-color-class={`${key}-${key2}`}
                    data-color={value2}
                  />
                ))
            ) : (
              <div
                class="size-8 w-96"
                style={{ background: value }}
                data-color-class={`${key}`}
                data-color={value}
              />
            )}
          </span>
        </div>
      </div>
    ))
  }
</div>

<script>
  const colors = document.querySelectorAll('[data-color-class]')
  colors.forEach((color: Element) => {
    color.addEventListener('click', () => {
      const classColor = (color as HTMLElement).dataset.colorClass
      if (classColor) {
        navigator?.clipboard.writeText(classColor)
      }
    })
    color.addEventListener('dblclick', () => {
      const colorComputed = window
        .getComputedStyle(color)
        .getPropertyValue('background-color')
      if (colorComputed) {
        navigator?.clipboard.writeText(colorComputed)
      }
    })
  })
</script>
